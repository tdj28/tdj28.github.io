<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Statistics on</title><link>https://tdj28.github.io/tags/statistics/</link><description>Recent content in Statistics on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 02 Aug 2024 15:21:05 -0700</lastBuildDate><atom:link href="https://tdj28.github.io/tags/statistics/index.xml" rel="self" type="application/rss+xml"/><item><title>Bayesian look at rapid tests</title><link>https://tdj28.github.io/p/bayesian-look-at-rapid-tests/</link><pubDate>Fri, 02 Aug 2024 15:21:05 -0700</pubDate><guid>https://tdj28.github.io/p/bayesian-look-at-rapid-tests/</guid><description>&lt;p>In this post, we explore Bayesian probabilities through the lens of the accuracies of medical tests. We show how Bayesian priors can
help refine our projections, and how to do this accurately.&lt;/p>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">Warning&lt;/h4>
This post is for a mathematical discussion, not a medical discussion. The intent is to inform the reader about how
probability works in relation to tests that can have false positives/negatives. The author has no medical training nor
is this post intended to provide medical advice. It is hoped that the reader will better understand likelihoods of test
results in the context of the mathematics, not make medical decisions based on this post.
&lt;/div>
&lt;h2 id="person-x">Person X
&lt;/h2>&lt;p>Imagine Person X, who is exhibiting the beginnings of flu-like symptoms. They have heard on the news that COVID-19 is spreading locally. Person X purchases an over-the-counter COVID-19 rapid test, and they get a negative result. They are relieved that it is not COVID-19, and head off to their job. They think to themselves, &lt;em>yes, maybe there is a small chance I&amp;rsquo;ll give a coworker the flu, but I can&amp;rsquo;t take a sick day unless I really need it, and this isn&amp;rsquo;t COVID&lt;/em>.&lt;/p>
&lt;p>Unfortunately, Person X isn&amp;rsquo;t fully aware that medical tests can have false positives and false negatives, and that the over-the-counter tests tend to be somewhat less accurate than the more formal tests. The complexities of public education on these matters is far beyond the scope of this post, but if you were responsible for public health, you must make some tough choices in educating the public about the possible false negative or false positive results from testing.&lt;/p>
&lt;p>On the one hand, if you push a lot of cautionary information to the public, a number of individuals will form an opinion that &lt;em>these tests aren&amp;rsquo;t 100% accurate so why bother&lt;/em>, and the percentage of people who will make an effort to tests themselves will likely go down. On the other hand, by &lt;em>not&lt;/em> emphasizing the potential inaccuracies in these tests, you may get a higher participation rate from the public, but then you will also have cases such as Person X who may be spreading the illness under the impression that they are not infected due to a false-negative result.&lt;/p>
&lt;p>How can we think about this carefully? This post is not medical instruction, but we can use data science tooling to help the average person better understand the complexities that public health officials face.&lt;/p>
&lt;h2 id="definitions-and-grounding-in-reference">Definitions and grounding in reference
&lt;/h2>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
&lt;p>In order to keep the mathematical discussion focused, we will have the following simplified assumptions:&lt;/p>
&lt;ul>
&lt;li>We assume for simplicity that only one over-the-counter test is available to the public in order to keep our calculations simpler, and assume all batches are equally accurate and that it doesn&amp;rsquo;t ever expire. We also assume that the test accuracy remain unchanged for new strains, which is also not likely.&lt;/li>
&lt;li>We assume for simplicity the uniformity in PCR testing (the more accurate but slower test for COVID-19), that is, we assume every single test taken anywhere using any lab will have the same accuracy, and that no lab mistakes are made.&lt;/li>
&lt;li>We will ignore the variation in human biology and assume that every single person conducts the at-home-test in exactly the same perfectly accurate way. For example, we ignore the fact that some individuals will not swab well enough, and that some individuals may be more likely to give false positives due to genetic variation in how the disease may manifest, i.e. it may be possible that some individuals are more likely to get a predominantly lower respiratory tract infection with this disease, and some individuals may be more likely to get an upper-respiratory tract infection (in which case the rapid test may be more accurate).&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>In reality, none of these assumptions hold true, and medical and public health officials have
to consider all of these complexities and many more.&lt;/strong>&lt;/p>
&lt;/div>
&lt;p>As will always be the case in Data Science, we are considering a model of our world that aligns in some ways with ours, but is far simpler by necessity.&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Tip&lt;/h4>
The art of Data Science is finding a key point at which we&amp;rsquo;ve added enough complexity to our model for it to provide actionable findings, but not so much complexity that our models are impractical to deploy and use. However, we must always remember that &lt;strong>these findings are only guaranteed to apply accurately to the world of our model, and thus we need to be careful in applying them without caution and testing to the world we live in.&lt;/strong>
&lt;/div>
&lt;p>With those caveats in mind, let&amp;rsquo;s see what probability can tell us about our imagined Person X scenario.
There are three main tests to determine if someone is positive for COVID-19, all of these tests have some tradeoffs:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;strong>Test Type&lt;/strong>&lt;/th>
&lt;th>&lt;strong>Pros&lt;/strong>&lt;/th>
&lt;th>&lt;strong>Cons&lt;/strong>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>Rapid Test&lt;/strong>&lt;/td>
&lt;td>- Quick results, often within 15-30 minutes.&lt;br>- Non-invasive testing method.&lt;/td>
&lt;td>- Lower accuracy compared to PCR, higher chance of false negatives.&lt;br>- Less effective in detecting the virus early in infection.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>PCR&lt;/strong>&lt;/td>
&lt;td>- High accuracy and sensitivity.&lt;br>- Considered the gold standard for detecting active infections.&lt;/td>
&lt;td>- Results take longer, typically 1-3 days.&lt;br>- More invasive and may require specialized facilities.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Antibody&lt;/strong>&lt;/td>
&lt;td>- Can detect past infections and immune response.&lt;br>- Useful for seroprevalence studies.&lt;/td>
&lt;td>- Not very useful in detecting active infections.&lt;br>- Takes 1-3 weeks after infection to develop detectable levels of antibodies.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>For all three types of tests, we can find multiple examples in the literature which have measured the accuracy of these tests, but of course, all of these studies are snapshots in time. As new strains become prevalent, the accuracy rate of, say, the Rapid Test, may drift. Additionally, given that research and data is never crystal clear, some of these studies disagree. For example, a study published in BMJ in 2022 found a substantially higher false positive rates with rapid testing than prior studies (Mulchandani et al)&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup> had found. Data is rarely clean, there is rarely a solid answer to questions we have to ask about our models, and so we sometimes have to make careful judgment calls on what data we should include or not.&lt;/p>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">Warning&lt;/h4>
We are using a single study here to ground our discussion in numbers. In no way should this single study be seen as the final source of truth, nor should the reader take numbers presented from this study as accurately applying to all tests. The reader is encouraged to conduct further research if they wish to be a part of any debates on the accuracy of these tests and how to present accuracy data to the public.
&lt;/div>
&lt;p>The results summary in this journal article are informative to our discussion. We can very clearly see here why these fine probabilistic details aren&amp;rsquo;t part of public-health&amp;rsquo;s general public messaging. We will include as an exercise at the end of this chapter a request that the reader attempt to fashion a public-health message under the assumption that these findings are correct and replicated, which could in fact include a choice to not mention them at all. Their results summary reads (Mulchandani et al)&lt;sup id="fnref1:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>:&lt;/p>
&lt;blockquote>
&lt;p>Test result bands were often weak, with positive/negative discordance by three trained laboratory staff for 3.9% of devices. Using consensus readings, for known positive and negative samples sensitivity was 92.5% (95% confidence interval 88.8% to 95.1%) and specificity was 97.9% (97.2% to 98.4%). Using an immunoassay reference standard, sensitivity was 94.2% (90.7% to 96.5%) among PCR confirmed cases but 84.7% (80.6% to 88.1%) among other people with antibodies. This is consistent with AbC-19 being more sensitive when antibody concentrations are higher, as people with PCR confirmation tended to have more severe disease whereas only 62% (218/354) of seropositive participants had had symptoms. If 1 million key workers were tested with AbC-19 and 10% had actually been previously infected, 84,700 true positive and 18,900 false positive results would be projected. The probability that a positive result was correct would be 81.7% (76.8% to 85.8%).&lt;/p>
&lt;/blockquote>
&lt;p>In the next section, we&amp;rsquo;ll take a deeper dive into what this results summary may mean.&lt;/p>
&lt;h3 id="definitions">Definitions
&lt;/h3>&lt;h4 id="test-results">Test results
&lt;/h4>&lt;p>First, let&amp;rsquo;s define some of the words used here that may be unfamiliar to those starting off in data science.&lt;/p>
&lt;div class="td-content" style="text-align:center">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">flowchart TD
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> A[Test Result] --&amp;gt;|+| B[Positive]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> A --&amp;gt;|- | C[Negative]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> B --&amp;gt;|Reality: Infected| D[True Positive]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> B --&amp;gt;|Reality: Not Infected| E[False Positive]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> C --&amp;gt;|Reality: Not Infected| F[True Negative]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> C --&amp;gt;|Reality: Infected| G[False Negative]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">True/False Positive/Negative&lt;/h4>
&lt;p>We will define these in the context of our current discussion about epidemiology.
Suppose a test can have two results: positive or negative. Suppose that these results map with some accuracy to a corresponding state, such as infected or not-infected. Then we can define the following terms:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>True Positive (TP)&lt;/strong>: When a test result is positive, and the reality is that the person &lt;strong>is&lt;/strong> indeed infected.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>False Positive (FP)&lt;/strong>: When a test result is positive, and the reality is that the person is &lt;strong>NOT&lt;/strong> infected.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>True Negative (TN)&lt;/strong>: When a test result is negative, and the reality is that the person is &lt;strong>NOT&lt;/strong> infected.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>False Negative (FN)&lt;/strong>: When a test result is negative, and the reality is that the person &lt;strong>is&lt;/strong> indeed infected.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/div>
&lt;h4 id="conditional-probability">Conditional Probability
&lt;/h4>&lt;p>Suppose we wish to find out the probability that someone is actually infected when they have tested negative.&lt;/p>
&lt;p>Conditional probability is defined as:&lt;/p>
&lt;div class="td-content">
&lt;div class="inner-wrapper">
&lt;div class="venn-container">
&lt;div id="venn" class="venn-diagram">&lt;/div>
&lt;div class="equation">
$$ A \cap B = \{x \in \mathcal{U} \mid x \in A \text{ and } x \in B\}$$
$$ P(B|A) = \frac{P(A \cap B)}{P(A)}$$
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;script src="https://tdj28.github.io/js/d3.v4.min.js">&lt;/script>
&lt;script src="https://tdj28.github.io/js/venn.js">&lt;/script>
&lt;script>
var sets = [
{sets:["A"], size: 12},
{sets:["B"], size: 12},
{sets: ["A", "B"], size: 4, label: "A ∩ B"},
];
var chart = venn.VennDiagram()
.wrap(false)
.width(250) // Adjust width to fit within the container
.height(250); // Adjust height if necessary
var div = d3.select("#venn").datum(sets).call(chart);
div.selectAll("text").style("fill", "white");
div.selectAll(".venn-circle path").style("fill-opacity", .6);
&lt;/script>
&lt;style>
.inner-wrapper {
display: flex;
justify-content: center;
align-items: center;
width: 75%;
box-sizing: border-box;
}
.venn-container {
display: flex;
justify-content: center;
align-items: center;
width: 100%;
box-sizing: border-box;
flex-wrap: wrap; /* Allows wrapping for smaller screens */
}
.venn-diagram {
flex: 0 1 auto;
max-width: 250px;
box-sizing: border-box;
}
.equation {
flex: 0 1 auto;
text-align: center;
margin-left: 20px;
box-sizing: border-box;
}
/* Media query for mobile screens */
@media (max-width: 768px) {
.venn-container {
flex-direction: column; /* Stack items vertically */
}
.equation {
margin-left: 0;
margin-top: 20px; /* Add spacing between stacked items */
}
}
&lt;/style>
&lt;ul>
&lt;li>
&lt;p>Consider a sample of two people whom we can definitively divide into a group whose test result was &lt;em>negative&lt;/em> (group A) and those who were actually &lt;em>positive&lt;/em> (group B). The group A might be those whose rapid test claimed negative, the group B might be those whose antibody test later showed they were actually infected.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>\(A \cap B\) is the intersection of group A with group B, that is, people who belong to both groups&amp;ndash;people whose rapid test said negative but were actually positive, i.e. the False Negative group.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>\(P(B | A)\) is the mathematical way of stating the probability of being in group B (infected) &lt;em>given&lt;/em> that one is &lt;em>also&lt;/em> in group A (tests negative).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>We define \(P(B | A)\) as the ratio \(P(B \cap A)\) over \(P(A)\)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Hence, intuitively, the probability that of any randomly selected person in group A (test negative) are also in the pool B (is infected) is equal to the portion of people \(A \cap B\) that overlaps with the entire pool A.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>This assumes a very large ensemble of people selected to study in either group, this doesn&amp;rsquo;t work reliable for smaller sample sizes.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h4 id="sensitivity-specificity-and-accuracy">Sensitivity, Specificity, and Accuracy
&lt;/h4>&lt;p>We now present some standard definitions:&lt;/p>
&lt;div class="alert alert-info" role="alert">
&lt;h4 class="alert-heading">Sensitivity&lt;/h4>
&lt;p>Portion of test results which gave a true positive result out of the pool of all test subjects who were in fact infected (those who were infected and got an accurate positive result are TP, those who were infected but got a negative result were FN, the sum TP + FN gives us the total that was in fact infected). The probability is written as the probability of getting a positive result \(P(+)\) given &amp;ldquo;|&amp;rdquo; that they are indeed infected \(P(D)\):&lt;/p>
&lt;p>$$ P(+|D) = \frac{\text{TP}}{\text{TP} + \text{FN}} $$&lt;/p>
&lt;/div>
&lt;div class="alert alert-info" role="alert">
&lt;h4 class="alert-heading">Specificity&lt;/h4>
&lt;p>Portion of test results which gave a true negative result out of the pool of all test subjects who were in fact &lt;strong>NOT&lt;/strong> infected (those who were &lt;strong>NOT&lt;/strong> infected and got a positive result are FP, those who were &lt;strong>NOT&lt;/strong> infected and got an accurate negative result were TN, the sum TN + FP gives us the total that was in fact &lt;strong>NOT&lt;/strong> infected). The probability is written as the probability of getting an negative result \(P(-)\) given &amp;ldquo;|&amp;rdquo; that they are not infected \(P(\neg D)\):&lt;/p>
&lt;p>$$ P(-|\neg D) = \frac{\text{TN}}{\text{TN} + \text{FP}} $$&lt;/p>
&lt;/div>
&lt;div class="alert alert-info" role="alert">
&lt;h4 class="alert-heading">Accuracy&lt;/h4>
Portion of all test results that were correctly identified, either as positive or negative, out of the total number of tests conducted. This includes both true positive results (TP, those who were infected and got an accurate positive result) and true negative results (TN, those who were &lt;strong>NOT&lt;/strong> infected and got an accurate negative result), divided by the total number of tests, which is the sum of true positives (TP), false positives (FP, those who were &lt;strong>NOT&lt;/strong> infected but got a positive result), true negatives (TN), and false negatives (FN, those who were infected but got a negative result).
$$ \frac{\text{TP} + \text{TN}}{\text{TP} + \text{TN} + \text{FP} + \text{FN}} $$
&lt;/div>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Remark&lt;/h4>
&lt;p>In what follows, we will be treating this equation and other like it as if this equivalence were true:&lt;/p>
&lt;p>$$ \text{Specificity} = P(\text{TN}|\neg D) = P(-|\neg D) $$&lt;/p>
&lt;p>In the context of disease as we are discussing it here, this equivalence is valid. Please note, though, that for more complicated discussions on probability, this equivalence may not hold.&lt;/p>
&lt;/div>
&lt;h3 id="analysis-of-journal-article">Analysis of journal article
&lt;/h3>&lt;p>Given the above definitions, we can examine this statement of the results from our example reference (Mulchandani et al)&lt;sup id="fnref2:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>:&lt;/p>
&lt;blockquote>
&lt;p>Using consensus readings, for known positive and negative samples sensitivity was 92.5% (95% confidence interval 88.8% to 95.1%) and specificity was 97.9% (97.2% to 98.4%).&lt;/p>
&lt;/blockquote>
&lt;p>By consensus readings, the protocol they describe entailed having three readers evaluate each test (Mulchandani et al)&lt;sup id="fnref3:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>:&lt;/p>
&lt;blockquote>
&lt;p>If the three independent readers disagreed on the positivity of a sample, the majority reading was taken as the “overall” or consensus test result in our primary analysis, as per the WHO protocol.&lt;/p>
&lt;/blockquote>
&lt;p>To determine who was true positive, the researchers used the baseline of truth for this consensus reading analysis to be &amp;ldquo;participants who had had a positive PCR test for SARS-CoV-2&amp;rsquo;&amp;rsquo; (Mulchandani et al)&lt;sup id="fnref4:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>. The PCR test, while more accurate than a rapid test, itself lacks perfect accuracy, so this and other systematic potential errors results in a uncertainty interval. Here&amp;rsquo;s a quick summary of their sensitivity findings:&lt;/p>
&lt;div class="alert alert-info" role="alert">
&lt;h4 class="alert-heading">Summary of findings&lt;/h4>
&lt;ul>
&lt;li>&lt;em>Rapid Test Sensitivity&lt;/em> when baseline for true positives was self-reported PCR positives alone: ≈92.5%&lt;/li>
&lt;li>&lt;em>Rapid Test Sensitivity&lt;/em> for those who had confirmed PCR positives when baseline for true positives was antibody blood test: ≈94.2%&lt;/li>
&lt;li>&lt;em>Rapid Test Sensitivity&lt;/em> for those who had no PCR test and hence had an unknown infection status, when baseline for true positives was antibody blood test: ≈84.7%&lt;/li>
&lt;/ul>
&lt;/div>
&lt;p>So what&amp;rsquo;s happening here? One explanation the researchers propose is that those individuals who had a more intense infection were more likely to experience more intense symptoms and more likely to get a PCR test. And since Rapid Tests are shown to be more accurate for those with more intense symptoms, and having more intense symptoms makes getting a PCR more likely (due to the inconvenience and discomfort of these tests as compared to Rapid Tests, those with fewer or less intense symptoms are less likely to make the effort), it then makes sense that these tests have higher sensitivity for those who got the PCR test. In the words of authors (Mulchandani et al)&lt;sup id="fnref5:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>:&lt;/p>
&lt;blockquote>
&lt;p>This is consistent with AbC-19 being more sensitive when antibody concentrations are higher, as people with PCR confirmation tended to have more severe disease whereas only 62% (218/354) of seropositive participants had had symptoms.&lt;/p>
&lt;/blockquote>
&lt;p>That is, of their sample group with whom they were certain had been positive due to the seropositive (anti-body blood test), only 62% had
displayed symptoms. That leaves a large group of people who might have shown no symptoms and did not know they were exposed, and those who had no symptoms, knew they were exposed, but either didn&amp;rsquo;t bother getting tested due to lack of symptoms or simply took a rapid test.&lt;/p>
&lt;h2 id="synthesis">Synthesis
&lt;/h2>&lt;p>Let&amp;rsquo;s imagine for a moment the unenviable task of being in charge of public health messaging. How might you relate the prior discussion to the general public? (Please note, in reality you would want to synthesize many journal articles that replicate each other, but when there is a new virus on the scene, often one has to work with just the first to publish and decide whether or not to act on that information before replication is achieved by other labs).&lt;/p>
&lt;p>We can look at how some of this information was handled at the time. One example dated from August 2020 (well before the above journal article was published) was that the US FDA advised at the time that rapid test should not be given to people &lt;em>without&lt;/em> symptoms (Mulchandani et al)&lt;sup id="fnref6:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>:&lt;/p>
&lt;blockquote>
&lt;p>People without symptoms of COVID-19 who haven’t been exposed to the virus shouldn’t get rapid tests to see if they are infected, according to guidance Friday from the Food and Drug Administration.&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>The guidance, added to the agency’s website, says that instead, highly sensitive tests, known as PCR tests, should be used for such individuals — if turnaround times are fast enough. These lab-based tests are known to be more accurate, but take hours to complete. Recent backlogs across the country have left some people waiting upward of 10 days for results.&lt;/p>
&lt;/blockquote>
&lt;p>At the time, rapid tests were approximately the same cost as PCR tests. From the University of Chicago News we can find a more recent recommendation from Assoc. Prof. Emily Landon \cite{UChicagoNews2020RapidCOVIDTest}:&lt;/p>
&lt;blockquote>
&lt;p>Rapid antigen tests – which you can buy in most pharmacies, big box stores and online retailers, are an excellent choice – but you may need to take multiple tests. Rapid antigen tests detect COVID-19 when people have a higher amount of virus particles in their system and are more contagious. But a negative antigen test doesn’t necessarily mean you don’t have COVID-19. Trust a positive antigen test, but be more skeptical about a negative one.&lt;/p>
&lt;/blockquote>
&lt;h3 id="discussion-of-journal-article">Discussion of journal article
&lt;/h3>&lt;p>We agree with the journal authors that it is advisable to &amp;ldquo;trust a positive [rapid test]&amp;rdquo;, even though the sensitivity has been found to be potentially as low as 84.7% for the test in question at the time of testing. We can argue from a public good perspective that this is an excellent example of public health messaging:&lt;/p>
&lt;ul>
&lt;li>Firstly, we have to accept that the scientific education of the general public is on a spectrum, and that the vast majority of the public lacks scientific education beyond what was provided in public schooling. This is not to sound elitist, but we have to understand our audience and what an audience may &lt;em>hear&lt;/em> from their perspective.&lt;/li>
&lt;li>If enough of the public starts to think that because of their imperfections, the rapid tests aren&amp;rsquo;t worth taking, then a powerful tool for slowing the spread of infection is reduced.&lt;/li>
&lt;li>For those who might have a non-Covid infection, such as a cold, and test positive with the rapid test, the likely worst outcome of the false positive is that they take extra precautions to not spread their infection.&lt;/li>
&lt;li>On the other hand, if they were actually positive and dismiss the test&amp;rsquo;s positive results, they could potentially infect individuals who are vulnerable to severe disease, or at least be more likely to spread the disease than otherwise.&lt;/li>
&lt;/ul>
&lt;p>So instead of saying to the public: &amp;ldquo;If you test positive with a rapid test, you have an approximately 90% chance or so that you actually have COVID-19,&amp;rdquo; a simple straight-forward message to &amp;ldquo;trust the positive result&amp;rdquo; likely maximizes the public good.&lt;/p>
&lt;p>On the other hand, although the specificity (portion of negatives that are true negatives) for these tests is fairly high, this is partially due to the fact that in the pool of test subjects, the vast majority of the subjects will not have COVID-19, and since the total number of False Positives will be small portion of the already relatively small number of positives, True Negatives will dominate the specificity equation; or to think about it in terms of limits:&lt;/p>
&lt;p>$$ \lim_{TN \rightarrow \infty} \frac{TN}{TN + FP} = 1 $$&lt;/p>
&lt;p>Things bring us to an important remark:&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Remark&lt;/h4>
&lt;p>When evaluating the values of sensitivity and specificity, be mindful of the proportions of the pool being analyzed. For example, if a test is administered to a population of 1000 where only one single person is infected, and the test captures that positive and also gives a single false positive, then specificity becomes:
$$ P(-|\neg D) = \frac{\text{TN}}{\text{TN} + \text{FP}} = \frac{999}{998 + 1} = 1$$
That is, everyone who was negative was measured to by the test, but the sample size is so small that this measure is unlikely to be a reliable projection for a larger population.&lt;/p>
&lt;p>Similarly, sensitivity becomes:
$$ P(+|D) = \frac{\text{TP}}{\text{TP} + \text{FN}} = \frac{1}{1 + 0 } = 1 $$
However, these numbers are practically worthless because the sample set was so heavily unbalanced and there isn&amp;rsquo;t enough subjects to form a clear statistical picture.&lt;/p>
&lt;p>Neither of these measures reflect that we had a single false positive, although accuracy would:&lt;/p>
&lt;p>$$ \frac{\text{TP} + \text{TN}}{\text{TP} + \text{TN} + \text{FP} + \text{FN}} = \frac{1 + 998}{1 + 998 + 1 + 0} = 0.999 $$&lt;/p>
&lt;p>But again, given the small sample size, these numbers are not likely to hold up upon replication with a larger sample size.
Statistics is about forming conclusions based on incomplete data, but there is a limit at which data is too incomplete to draw
conclusions. How that limit is determined is beyond the scope of this post.&lt;/p>
&lt;/div>
&lt;p>However, in the study cited, and a multitude of other studies, the results are statistically significant enough that we can, with some confidence, examine real world scenarios with the context of these findings. Let&amp;rsquo;s return to our case of Person X and examine their situation given these numbers and assumptions above.&lt;/p>
&lt;h3 id="example">Example
&lt;/h3>
&lt;div class="alert alert-secondary" role="alert">
&lt;h4 class="alert-heading">Example&lt;/h4>
&lt;blockquote>
&lt;p>Suppose the Person X we started this post with, who has symptoms consistent with cold/flu/COVID-19, took a rapid test and got a negative result. What are the chances that Person X got a false negative and is indeed infected with SARS-COV-2?&lt;/p>
&lt;/blockquote>
&lt;p>In the following discussion, D is short for disease, such that \( P(D) \) is the probability that someone who exhibits certain symptoms has the disease in question, in this case, COVID-19, vs having some other disease \(P(D&amp;rsquo;)\), say, a flu.&lt;/p>
&lt;p>Given the following assumptions and definitions:&lt;/p>
&lt;ul>
&lt;li>Prevalence Rate of COVID-19 in the population of those currently exhibiting cold and flu symptoms (Prior Probability, P(D)): 35%. This means that of all the people displaying cold and flu symptoms, 35% will have COVID-19, the remainder will have some other virus. I&amp;rsquo;ve randomly selected the number 35% for the sake of this example, in reality this number will vary by region and current viral trends. It is also impossible to determine this number precisely since a number of individuals who are showing such symptoms do not get sick enough to enter the medical system for testing, and for many viruses people might get effected and have minimal or no symptoms (asymptomatic) and be missed entirely.&lt;/li>
&lt;li>Sensitivity (True Positive Rate, P(+|D), the probability of getting a positive result given that the person does have the disease): 84.7%.&lt;/li>
&lt;li>Specificity (True Negative Rate, P(-|¬D), the probability of getting a negative result given that the individual does not have the disease): 97.9%.&lt;/li>
&lt;li>\(P(-|D)\): The probability of getting a false negative result given that the individual does have the disease (1-sensitivity).&lt;/li>
&lt;li>\(P(D|-)\): The probability of the tested individual to have the disease given a negative test.&lt;/li>
&lt;/ul>
&lt;p>Let&amp;rsquo;s start by calculating \(P(-)\), the probability of any member of the subject population receiving a negative test result from the rapid test (without knowing whether they have the disease or not). There are two probabilistic pathways for them to fall into this group. The first is that they don&amp;rsquo;t have the disease and get a True Negative result from the test. The other pathway is that they have the disease but get a False Negative.&lt;/p>
&lt;div class="td-content" style="text-align:center">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">graph TD
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Population --&amp;gt; |&amp;#34;P(D)&amp;#34;| D[&amp;#34;Has Disease (D)&amp;#34;]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Population --&amp;gt; |&amp;#34;P(¬D)&amp;#34;| ND[&amp;#34;No Disease (¬D)&amp;#34;]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> D --&amp;gt; |&amp;#34;P(-|D): 1-Sensitivity&amp;#34;| FN[&amp;#34;False Negative&amp;#34;]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ND --&amp;gt; |&amp;#34;P(-|¬D): Specificity&amp;#34;| TN[&amp;#34;True Negative&amp;#34;]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> FN --&amp;gt; |&amp;#34;P(D) · P(-|D)&amp;#34;| N[&amp;#34;Negative Result P(-)&amp;#34;]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> TN --&amp;gt; |&amp;#34;P(¬D) · P(-|¬D)&amp;#34;| N
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>
&lt;p>The probability of getting a negative result is thus
the sum of the probability of having the disease but getting a false negative given that one has the disease,
\(P(D) \cdot P(-|D)\), plus the probability of not having the disease
and getting a true negative result given that one does not have the disease, \(P(\neg D) · P(-|\neg D)\).&lt;/p>
&lt;p>This gives us the equation&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">\begin{aligned}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">P(-) &amp;amp;=&amp;amp; P(\neg D) \cdot P(-|\neg D) + P(D) \cdot P(-|D) \\
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;amp;=&amp;amp; \left(1 - P(D)\right) \cdot P(-|\neg D) + P(D) \cdot \left(1 - P(+|D)\right)\\
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;amp;=&amp;amp; (1-0.35)(0.979) + (0.35)(1-0.847) \\
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;amp;=&amp;amp; 0.6899
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">\end{aligned}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>So for our Person X, we would like to know: &lt;strong>given a negative test&lt;/strong>, what is the probability that they actually &lt;strong>do&lt;/strong> have COVID-19? That is, we would like to estimate \(P(D|-)\). By the definition of &lt;a class="link" href="#conditional-probability" >conditional probabilities&lt;/a>:&lt;/p>
&lt;!-- $$ P(D|-) = \frac{P(D \cap -)}{P(-)} = \frac{P(D)\cdot P(-|D)}{P(-)}$$ -->
&lt;!--
As we calculated \\(P(-)\\) prior, we saw that one term contained \\(P(\neg D)\\) and hence that term is excluded from the intersection of \\(P(D)\\), giving us -->
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">\begin{aligned}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">P(D|-) &amp;amp;=&amp;amp; \frac{P(D \cap -)}{P(-)} \\
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;amp;=&amp;amp; \frac{P(D)\cdot P(-|D)}{P(-)} \\
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;amp;=&amp;amp; \frac{ P(D) \cdot \left( 1 - P(+|D)\right) }{P(-)} \\
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;amp;=&amp;amp; \frac{0.35 \cdot (1-0.847)}{0.6899}\\
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;amp;=&amp;amp; 0.0776
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">\end{aligned}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>That is, in this given scenario, assuming the numbers above, the probability that Person X has the disease despite the
fact that their rapid test came back negative is around 7.76%. &lt;strong>Important: This number is particular to the scenario we imagined above, but is in no way representative for every case. For example, we picked a random percentage for \(P(D)\). Please do not use these numbers to make real world decisions or arguments. This was for demonstrative educational purposes only.&lt;/strong>&lt;/p>
&lt;/div>
&lt;h2 id="bayes-theorem">Bayes&amp;rsquo; Theorem
&lt;/h2>&lt;p>The above equation second line in the above question is known as Bayes&amp;rsquo; Theorem, which is generically written:&lt;/p>
&lt;p>$$P(A | B)=\frac{P(A) \cdot P(B | A) }{P(B)}$$&lt;/p>
&lt;h2 id="discussion">Discussion
&lt;/h2>&lt;p>We can visualize the situation with a Sankey diagram. Here we exaggerate the percentage of false positives and negatives for visual purposes. As can be seen, those who are infected but obtain a negative test and then do not self-isolate join the uninfected in non-isolation allowing the virus to spread and underlining the importance of accurate tests. However, the test results are accurate enough to catch the majority
of people who are genuinely infected, and hence, reduces the rate of spread.&lt;/p>
&lt;p>&lt;img src="https://tdj28.github.io/p/bayesian-look-at-rapid-tests/image.png"
width="709"
height="275"
srcset="https://tdj28.github.io/p/bayesian-look-at-rapid-tests/image_hu1798480561541634851.png 480w, https://tdj28.github.io/p/bayesian-look-at-rapid-tests/image_hu1158743544528413052.png 1024w"
loading="lazy"
alt="This type of diagram is called a Sankey diagram. Here we exaggerate the percentage of false positives and negatives for visual purposes. As can be seen, those who are infected but obtain a negative test and then do not self-isolate join the uninfected in non-isolation allowing the virus to spread and underlining the importance of accurate tests."
class="gallery-image"
data-flex-grow="257"
data-flex-basis="618px"
>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>This Bayesian analysis demonstrates that, under the given assumptions, an individual with symptoms who tests negative with a rapid COVID-19 test sometimes has a low but non-trivial probability of being actually positive for the virus.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>However, diseases aren&amp;rsquo;t just the story of an individual, they are fully stories of an ensemble of individuals.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>So instead of saying that in this imagined scenario, Person X has a 7.76% chance of actually having COVID-19 despite the negative rapid test, we would more accurately have summarized it as follows:&lt;/p>
&lt;ul>
&lt;li>&lt;em>Given these (guessed) assumptions, including the test accuracy rates and prevalence of COVID-19 among those exhibiting flu or cold like symptoms, on average 7 to 8 out of every 100 people chosen from the wider population who have symptoms of a respiratory illness but test negative with this rapid test will in fact be positive and potentially capable of spreading the disease.&lt;/em> (&lt;strong>Again, please note that these numbers are not to be used in the real world, this is meant to demonstrate a first pass at calculating these probabilities.&lt;/strong>)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Hence we see the public health messaging challenges for scenarios such as this, where we need to underline the imperfections of the test in order to instill some caution in the public regarding negative tests results, while maintaining public trust in the positive results so that the population continues to take them seriously and self-isolate.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Ultimately, the work of public health comes down to &lt;strong>minimizing&lt;/strong> the total number of deaths balanced against the negative impacts of public health mitigation efforts. It is a tough job, but one that benefits from public communications that are straight-forward to understand by the general population.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Understanding how these probabilities are calculated can help individuals spot misinformation.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>It is a tough job, with no easy answers, and as is typical in statistics, there is never any perfect certainty. Accepting that this is true for almost every decision that must be made in human societies doesn&amp;rsquo;t mean we just give up and let what happens happen. It means we do our very best with the limited information we have, and constantly refine our approach as more information is obtained.&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>Mulchandani et al., &lt;em>Accuracy of UK Rapid Test Consortium (UK-RTC) AbC-19 Rapid Test for detection of previous SARS-CoV-2 infection in key workers: test accuracy study&lt;/em>, BMJ, 371, 2020, doi &lt;a class="link" href="https://www.bmj.com/content/371/bmj.m4262" target="_blank" rel="noopener"
>10.1136/bmj.m4262&lt;/a>&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&amp;#160;&lt;a href="#fnref1:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&amp;#160;&lt;a href="#fnref2:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&amp;#160;&lt;a href="#fnref3:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&amp;#160;&lt;a href="#fnref4:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&amp;#160;&lt;a href="#fnref5:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&amp;#160;&lt;a href="#fnref6:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>Exploring Wikipedia Page Count Trends</title><link>https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/</link><pubDate>Sun, 05 Aug 2018 19:21:05 -0700</pubDate><guid>https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/</guid><description>&lt;h1 id="exploring-wikipedia-page-counts-via-additive-models-for-seasonality-decomposition">Exploring Wikipedia page counts via additive models for seasonality decomposition
&lt;/h1>&lt;h2 id="introduction">Introduction
&lt;/h2>&lt;p>Wikipedia, in addition to being quite valuable as a &lt;em>starting&lt;/em> point for many student essays (as somebody who has spent time in front of the classroom, I can&amp;rsquo;t emphasize the word &lt;em>starting&lt;/em> enough here), can provide some sociological insight by providing page count hits. In this brief blog entry, we will explore two python-ready implementations of additive models for seasonality decomposition in the context of the following topic:&lt;/p>
&lt;ul>
&lt;li>Is there any seasonality with wikipedia page hits? For this question, we will look at a few keywords which we think are quite often used by school students in researching for common essay questions (e.g. Abraham_Lincoln) and other keywords which are less likely to be commonly used by students for essays at any level, for example, the American telecommunications company Sprint.&lt;/li>
&lt;/ul>
&lt;p>This blog entry is posted in the form of a Jupyter Notebook so that readers can recreate the findings and pursue further questions more easily.&lt;/p>
&lt;p>We use two &lt;em>additive model&lt;/em> implementations, one from a library called &lt;a class="link" href="https://www.statsmodels.org/stable/index.html" target="_blank" rel="noopener"
>statsmodel&lt;/a> and another from a library developed by Facebook called &lt;a class="link" href="https://facebook.github.io/prophet/" target="_blank" rel="noopener"
>prophet&lt;/a>.&lt;/p>
&lt;h2 id="additive-models-for-seasonality-decomposition-a-quick-primer">Additive models for seasonality decomposition, a quick primer
&lt;/h2>&lt;p>Let&amp;rsquo;s begin by creating a artificial time series.&lt;/p>
&lt;p>Before importing pandas, numpy, etc., I want to turn off some typical warnings that we see from these libraries. This is just to keep the output looking clean for presentation purposes.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">warnings&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">warnings&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">filterwarnings&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;ignore&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">message&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;numpy.dtype size changed&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">warnings&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">filterwarnings&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;ignore&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">message&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;numpy.ufunc size changed&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">warnings&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">filterwarnings&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;ignore&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">category&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="ne">FutureWarning&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Next, we import all of the great Python libraries. Here, for seasonal decomposition we are using statsmodel and Facebook&amp;rsquo;s Prophet.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">pandas&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="nn">pd&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">numpy&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="nn">np&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">matplotlib.pylab&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="nn">plt&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">datetime&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">%&lt;/span>&lt;span class="n">matplotlib&lt;/span> &lt;span class="n">inline&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">matplotlib.pylab&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">rcParams&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">seaborn&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="nn">sns&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">statsmodels.tsa.stattools&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">adfuller&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">statsmodels.tsa.seasonal&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">seasonal_decompose&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">fbprophet&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">Prophet&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">rcParams&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;figure.figsize&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">16&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">7&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Next, let&amp;rsquo;s create a fake data set.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">entries&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">365&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mi">2&lt;/span> &lt;span class="c1"># Two years worth of days&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">df&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">pd&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">DataFrame&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">np&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">random&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">randn&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">entries&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">cumsum&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">df&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">head&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">plot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">df&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">tolist&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">show&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_7_0.png"
width="938"
height="415"
srcset="https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_7_0_hu6320986420673344421.png 480w, https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_7_0_hu12934238345635945047.png 1024w"
loading="lazy"
alt="png"
class="gallery-image"
data-flex-grow="226"
data-flex-basis="542px"
>&lt;/p>
&lt;p>Our brains have pattern-matching algorithms trained over billions of years, so even though the above data set is a random walk, we may see patterns there anyway. If we run it again, those patterns will change even though we were using the exact same algorithm to generate them. This of course doesn&amp;rsquo;t imply that finding patterns in data is an empty task, there is very often patterns that are legitimate. The point here is to show how the additive model works by throwing something known to be random at it. Just to show, again, how entirely random the generated dataset is, let&amp;rsquo;s throw a bunch in the same graph:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">rwts&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">entries&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">100&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">_df&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">pd&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">DataFrame&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">np&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">random&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">randn&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">entries&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">cumsum&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">start&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">datetime&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">datetime&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">strptime&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;20160101&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;%Y&lt;/span>&lt;span class="si">%d&lt;/span>&lt;span class="s2">%m&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">dates_generated&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">start&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">datetime&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">timedelta&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">days&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">entries&lt;/span>&lt;span class="p">)]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">dtse&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">pd&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Series&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dates_generated&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">_df&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;ds&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">dtse&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">_df&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">_df&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">rename&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">columns&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;y&amp;#34;&lt;/span>&lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">_df&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">index&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">_df&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;ds&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">_df&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">entries&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">365&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mi">2&lt;/span> &lt;span class="c1"># Two years worth of days&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">rwdf&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">rwdf&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rwts&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">entries&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">plot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rwdf&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="s1">&amp;#39;y&amp;#39;&lt;/span>&lt;span class="p">])&lt;/span> &lt;span class="c1">#.tolist())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">show&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_10_0.png"
width="938"
height="415"
srcset="https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_10_0_hu515019636592041744.png 480w, https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_10_0_hu5174324964489720936.png 1024w"
loading="lazy"
alt="png"
class="gallery-image"
data-flex-grow="226"
data-flex-basis="542px"
>&lt;/p>
&lt;p>Next, let&amp;rsquo;s see what happens when we apply the statsmodel implementation of the additive model to a random walk dataset:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">additive_seasonal_plot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">_df&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">frequency&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">365&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">title&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;I forgot to tinclude a title.&amp;#34;&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">fig&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ax&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">subplots&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">title&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">title&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">decompositionm&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">seasonal_decompose&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">_df&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">freq&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">frequency&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">model&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;additive&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">trendm&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">decompositionm&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">trend&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">seasonalm&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">decompositionm&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">seasonal&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">residualm&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">decompositionm&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">resid&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">subplot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">411&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">plot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">_df&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">label&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;Original&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">legend&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">loc&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;best&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">subplot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">412&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">plot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">trendm&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">label&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;Trend&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">legend&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">loc&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;best&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">subplot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">413&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">plot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">seasonalm&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">label&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;Seasonality&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">legend&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">loc&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;best&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">subplot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">414&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">plot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">residualm&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">label&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;Residuals&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">legend&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">loc&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;best&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">tight_layout&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">additive_seasonal_plot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rwts&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">365&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">)[&lt;/span>&lt;span class="s1">&amp;#39;y&amp;#39;&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">frequency&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">365&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">title&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;Random Walk&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_13_0.png"
width="1144"
height="496"
srcset="https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_13_0_hu10247107503224196402.png 480w, https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_13_0_hu13280983473169103292.png 1024w"
loading="lazy"
alt="png"
class="gallery-image"
data-flex-grow="230"
data-flex-basis="553px"
>&lt;/p>
&lt;p>Now let&amp;rsquo;s try that with Prophet:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">prophet_seasonal_plot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">_df&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">frequency&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">365&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">mytitle&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;I forgot to tinclude a title.&amp;#34;&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">_m&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Prophet&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">yearly_seasonality&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">True&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">daily_seasonality&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">False&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">weekly_seasonality&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">True&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">mcmc_samples&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">seasonality_prior_scale&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">50&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">_df&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;y&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">plot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">title&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">mytitle&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">_m&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">fit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">_df&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">_future&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">_m&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">make_future_dataframe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">periods&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">365&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">_forecast&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">_m&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">predict&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">future&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">_m&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">plot_components&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">_forecast&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">_m&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">plot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">_forecast&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">prophet_seasonal_plot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rwts&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">365&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">frequency&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">365&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">mytitle&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;Random Walk&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_16_0.png"
width="938"
height="453"
srcset="https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_16_0_hu7129137000648543187.png 480w, https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_16_0_hu934392256254631689.png 1024w"
loading="lazy"
alt="png"
class="gallery-image"
data-flex-grow="207"
data-flex-basis="496px"
>&lt;/p>
&lt;p>&lt;img src="https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_16_1.png"
width="640"
height="640"
srcset="https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_16_1_hu9931341670711957581.png 480w, https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_16_1_hu11731304441509287279.png 1024w"
loading="lazy"
alt="png"
class="gallery-image"
data-flex-grow="100"
data-flex-basis="240px"
>&lt;/p>
&lt;p>&lt;img src="https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_16_2.png"
width="712"
height="424"
srcset="https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_16_2_hu1588946172753811943.png 480w, https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_16_2_hu17788978990119481240.png 1024w"
loading="lazy"
alt="png"
class="gallery-image"
data-flex-grow="167"
data-flex-basis="403px"
>&lt;/p>
&lt;p>Prophet makes nicer graphs out of the box, for sure. It also has a nice way to show uncertainty. And looking at the above, you might very well believe that indeed we have found some sort of phenomenon that seems to peak in late winter and spring, and on Thursday for some reason. It would be a pretty safe bet to bet that the above trend would peak in the months following the last dataset we have, right? Wrong, of course, because as you know, this dataset was generated entirely randomly. The lesson here is not that this method for modeling seasonality and forecasting is wrong, as indeed they work exactly as they are designed to, but instead that we need to be quite careful not to so readily believe what they say. This is the giant grain of salt I&amp;rsquo;m putting on your plate before getting to the fun stuff.&lt;/p>
&lt;p>To make this point entirely visual, let&amp;rsquo;s do the same analysis as above, but instead of just using two years worth of fake data, let&amp;rsquo;s create three years, but only feed the additive model two years, and see how it does in the third year.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">df1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">rwts&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">365&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">mask1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">df1&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;ds&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">&amp;gt;=&lt;/span> &lt;span class="s1">&amp;#39;20160101&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">df1&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;ds&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="s1">&amp;#39;20180101&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">df2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">df1&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">loc&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">mask1&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">mask2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">df1&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;ds&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">&amp;gt;=&lt;/span> &lt;span class="s1">&amp;#39;20180101&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">df1&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;ds&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="s1">&amp;#39;20190101&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">df3&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">df1&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">loc&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">mask2&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">_m&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Prophet&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">yearly_seasonality&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">True&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">daily_seasonality&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">False&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">weekly_seasonality&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">True&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">mcmc_samples&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">seasonality_prior_scale&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">50&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">_m&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">fit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">df2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">_future&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">_m&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">make_future_dataframe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">periods&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">365&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">_forecast&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">_m&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">predict&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">future&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">_m&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">plot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">_forecast&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_18_0.png"
width="712"
height="424"
srcset="https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_18_0_hu14830363113800810005.png 480w, https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_18_0_hu10218377054246143012.png 1024w"
loading="lazy"
alt="png"
class="gallery-image"
data-flex-grow="167"
data-flex-basis="403px"
>&lt;/p>
&lt;p>That looks great, that stock is about to go up like crazy, let&amp;rsquo;s dump our entire life-savings into that stock!&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">_m&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">plot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">_forecast&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">df3&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;y&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">plot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">color&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;Red&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;pre>&lt;code>&amp;lt;matplotlib.axes._subplots.AxesSubplot at 0x7f7fbe8d1048&amp;gt;
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_20_1.png"
width="712"
height="399"
srcset="https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_20_1_hu15388761876393223685.png 480w, https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_20_1_hu5558415048064266838.png 1024w"
loading="lazy"
alt="png"
class="gallery-image"
data-flex-grow="178"
data-flex-basis="428px"
>&lt;/p>
&lt;p>Oops.&lt;/p>
&lt;h2 id="wikipedia-page-hit-stats">Wikipedia Page hit stats
&lt;/h2>&lt;p>Previously, in order to get a nice way to access Wikipedia page hit data, I would have suggsted the R library wikipediatrend. The situation has evolved such that wikipediatrend is not functional (see &lt;a class="link" href="https://github.com/petermeissner/wikipediatrend/issues/32" target="_blank" rel="noopener"
>this link for more details&lt;/a>). Fortunately, Wikimedia themselves have released an api that has a &lt;a class="link" href="https://github.com/mediawiki-utilities/python-mwviews" target="_blank" rel="noopener"
>python library&lt;/a>.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">mwviews.api&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">PageviewsClient&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">p&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">PageviewsClient&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;blog&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Although there is a &lt;a class="link" href="https://dumps.wikimedia.org/other/pagecounts-raw/" target="_blank" rel="noopener"
>repository&lt;/a> of old pageviews pre-dating July 2015, the API only provides dates from July 2015 forward. Let&amp;rsquo;s get three years worth of data from July 2015 to July 2018. The following command outputs a dictionary with items of the form:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"> datetime.datetime(2015, 12, 21, 0, 0): {&amp;#39;Lincoln&amp;#39;: 503},
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>when we make a call to extract page hit counts for the topic &amp;lsquo;Abraham Lincoln&amp;rsquo;.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">dictLincoln&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">p&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">article_views&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;en.wikipedia&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;Abraham Lincoln&amp;#39;&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">granularity&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;daily&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">start&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;20150701&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">end&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;20180701&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">dfLincoln&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">pd&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">DataFrame&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">from_dict&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dictLincoln&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">transpose&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">dfLincoln&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">index&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">pd&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to_datetime&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dfLincoln&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">index&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">dfLincoln&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">dfLincoln&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">rename&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">columns&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="s2">&amp;#34;Abraham_Lincoln&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Daily Page Counts&amp;#34;&lt;/span>&lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">dfLincoln&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">head&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div>
&lt;style scoped>
.dataframe tbody tr th:only-of-type {
vertical-align: middle;
}
&lt;pre>&lt;code>.dataframe tbody tr th {
vertical-align: top;
}
.dataframe thead th {
text-align: right;
}
&lt;/code>&lt;/pre>
&lt;p>&lt;/style>&lt;/p>
&lt;table border="1" class="dataframe">
&lt;thead>
&lt;tr style="text-align: right;">
&lt;th>&lt;/th>
&lt;th>Daily Page Counts&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;th>2015-07-01&lt;/th>
&lt;td>15223&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>2015-07-02&lt;/th>
&lt;td>15137&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>2015-07-03&lt;/th>
&lt;td>17291&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>2015-07-04&lt;/th>
&lt;td>19697&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>2015-07-05&lt;/th>
&lt;td>18149&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;p>Do we see any trends just by glancing at the plot of these page hits over the three year period from July 2015 to July 2018? Initially we may see a few, such as that the page hits seem to go up after January, and have some unusual peaks in late 2016 and early 2017 (very likely, and precisely as we will see later, related to the election and inauguration of that period).&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">dfLincoln&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">plot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">title&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;Abraham Lincoln Wiki Page Hits&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;pre>&lt;code>&amp;lt;matplotlib.axes._subplots.AxesSubplot at 0x7f7fc8603a90&amp;gt;
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_29_1.png"
width="949"
height="439"
srcset="https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_29_1_hu8571237364022576187.png 480w, https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_29_1_hu10775955412992444658.png 1024w"
loading="lazy"
alt="png"
class="gallery-image"
data-flex-grow="216"
data-flex-basis="518px"
>&lt;/p>
&lt;p>In fact, let&amp;rsquo;s plot key dates on that plot, such as the US election of 2016, inauguration of 2017, President&amp;rsquo;s Day holidays, and the 4th of July. These key dates explain almost all of the spikes.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">ax&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">dfLincoln&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">plot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">title&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;Abraham Lincoln Wiki Page Hits + Key dates&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">linewidth&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mf">3.0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">important_dates&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;2016-11-08&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;2017-01-20&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;2016-02-15&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;2017-02-20&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;2018-02-19&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;2015-07-04&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;2016-07-04&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;2017-07-04&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;2018-07-04&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">xc&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">important_dates&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">axvline&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">xc&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">color&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;k&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">linestyle&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;--&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">ax&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">set_xlim&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pd&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Timestamp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;2016-01-01&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">pd&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Timestamp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;2018-03-01&amp;#39;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">ax&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">set_ylim&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">90000&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;pre>&lt;code>(0, 90000)
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_31_1.png"
width="949"
height="439"
srcset="https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_31_1_hu2425904607623869488.png 480w, https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_31_1_hu5200824809977631398.png 1024w"
loading="lazy"
alt="png"
class="gallery-image"
data-flex-grow="216"
data-flex-basis="518px"
>&lt;/p>
&lt;p>Next we apply statsmodel&amp;rsquo;s implementation of the additive model for seasonal decomposition:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">fig&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ax&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">subplots&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">title&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Seasonal trend for Wiki Page Counts: Abraham Lincoln&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">decompositionm&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">seasonal_decompose&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dfLincoln&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">freq&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">365&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">model&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;additive&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">trendm&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">decompositionm&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">trend&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">seasonalm&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">decompositionm&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">seasonal&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">residualm&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">decompositionm&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">resid&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">subplot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">411&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">plot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dfLincoln&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">label&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;Original&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">legend&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">loc&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;best&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">subplot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">412&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">plot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">trendm&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">label&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;Trend&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">legend&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">loc&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;best&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">subplot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">413&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">plot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">seasonalm&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">label&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;Seasonality&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">legend&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">loc&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;best&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">subplot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">414&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">plot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">residualm&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">label&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;Residuals&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">legend&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">loc&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;best&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">tight_layout&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_33_0.png"
width="1144"
height="496"
srcset="https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_33_0_hu13031249686203605896.png 480w, https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_33_0_hu18241827231963617056.png 1024w"
loading="lazy"
alt="png"
class="gallery-image"
data-flex-grow="230"
data-flex-basis="553px"
>&lt;/p>
&lt;p>This model has identified a trend increase in election year 2016, which seems to make sense. However, it overfit the spike seen around election day 2016, and we can see the result of that overfit in the residuals which dip extremely a year before and after election day. In a future blog post, we will look at working around this by marking the key dates as holidays so that the algorithm doesn&amp;rsquo;t overfit those days. The seasonality trend has also found something pretty expected, which is that hits on that page seem to breathe with the typical American school year. That is, we can see in the seasonal trends that there are many students using Wikipedia (hopefully as a starting point and not a primary resource) for essay papers and homework answers on Abraham Lincoln.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">ax&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">seasonalm&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">plot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">title&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;Abraham Lincoln Wiki Page Hits Seasonal Trend + Key dates + Shaded School Year&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">linewidth&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mf">3.0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">important_dates&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;2016-11-08&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;2017-01-20&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;2016-02-15&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;2017-02-20&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;2018-02-19&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;2015-12-25&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;2016-12-25&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;2017-12-25&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;2015-07-04&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;2016-07-04&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;2017-07-04&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;2018-07-04&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">xc&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">important_dates&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ax&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">axvline&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">xc&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">color&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;k&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">linestyle&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;--&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">ax&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">axvspan&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pd&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Timestamp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;2015-09-01&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">pd&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Timestamp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;2016-06-01&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">facecolor&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;g&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">alpha&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mf">0.3&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">ax&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">axvspan&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pd&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Timestamp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;2016-09-01&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">pd&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Timestamp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;2017-06-01&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">facecolor&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;g&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">alpha&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mf">0.3&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">ax&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">axvspan&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pd&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Timestamp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;2017-09-01&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">pd&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Timestamp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;2018-06-01&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">facecolor&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;g&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">alpha&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mf">0.3&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">ax&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">set_xlim&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pd&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Timestamp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;2015-07-01&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">pd&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Timestamp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;2018-03-01&amp;#39;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">ax&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">set_ylim&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">10000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">40000&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;pre>&lt;code>(-10000, 40000)
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_35_1.png"
width="957"
height="439"
srcset="https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_35_1_hu14800540357833563139.png 480w, https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_35_1_hu15053667681378750235.png 1024w"
loading="lazy"
alt="png"
class="gallery-image"
data-flex-grow="217"
data-flex-basis="523px"
>&lt;/p>
&lt;p>Zooming in on the residuals, we see again how the overfitting to the special events (election and inauguration) hurt the accuracy of the models.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">ax&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">residualm&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">plot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">title&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;Abraham Lincoln Wiki Page Hits Seasonal Residuals + Key dates&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">linewidth&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mf">3.0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">important_dates&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span> &lt;span class="s1">&amp;#39;2016-01-20&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;2016-11-08&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;2017-01-20&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;2017-11-08&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">xc&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">important_dates&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ax&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">axvline&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">xc&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">color&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;k&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">linestyle&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;--&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">ax&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">set_xlim&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pd&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Timestamp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;2015-12-01&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">pd&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Timestamp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;2018-02-01&amp;#39;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">ax&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">set_ylim&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">40000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">40000&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;pre>&lt;code>(-40000, 40000)
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_37_1.png"
width="957"
height="439"
srcset="https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_37_1_hu8192794030668203439.png 480w, https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_37_1_hu3508457951293339452.png 1024w"
loading="lazy"
alt="png"
class="gallery-image"
data-flex-grow="217"
data-flex-basis="523px"
>&lt;/p>
&lt;p>Now we have stated a hypothesis without backing it up, namely that the seasonality over the year in page hits for the Wikipedia entry for Abraham Lincoln reflects the patterns of the American school year. This is pretty impossible to prove without data that is impossible or not practical to obtain, namely we would have to have the IP addresses of all those page hits and tie those in to schools and households with students, etc. Never going to happen. But we can strengthen our confidence in our hypothesis by testing it in the negative, that is, what will we see if we pick a topic which we do &lt;em>not&lt;/em> expect to be tied to school-year patterns, a topic students would rarely ever look up for school work? Let&amp;rsquo;s try the American telecom Sprint.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">get_wiki_df&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">topic&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ymin&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ymax&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">_dict&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">p&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">article_views&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;en.wikipedia&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">topic&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">granularity&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;daily&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">start&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;20150701&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">end&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;20180701&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">_df&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">pd&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">DataFrame&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">from_dict&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">_dict&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">transpose&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">_df&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">index&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">pd&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to_datetime&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">_df&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">index&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">_df&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">_df&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">rename&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">columns&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">topic&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Daily Page Counts&amp;#34;&lt;/span>&lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ax&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">_df&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">plot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">title&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">{}&lt;/span>&lt;span class="s2"> Wiki Page Hits + Key dates + Shaded School Year&amp;#34;&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">format&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">topic&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">linewidth&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mf">3.0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">important_dates&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;2016-11-08&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;2017-01-20&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;2016-02-15&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;2017-02-20&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;2018-02-19&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;2015-12-25&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;2016-12-25&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;2017-12-25&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;2015-07-04&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;2016-07-04&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;2017-07-04&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;2018-07-04&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">xc&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">important_dates&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ax&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">axvline&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">xc&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">color&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;k&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">linestyle&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;--&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ax&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">axvspan&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pd&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Timestamp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;2015-09-01&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">pd&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Timestamp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;2016-06-01&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">facecolor&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;g&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">alpha&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mf">0.3&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ax&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">axvspan&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pd&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Timestamp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;2016-09-01&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">pd&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Timestamp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;2017-06-01&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">facecolor&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;g&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">alpha&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mf">0.3&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ax&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">axvspan&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pd&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Timestamp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;2017-09-01&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">pd&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Timestamp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;2018-06-01&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">facecolor&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;g&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">alpha&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mf">0.3&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ax&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">set_xlim&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pd&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Timestamp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;2015-07-01&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">pd&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Timestamp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;2018-03-01&amp;#39;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ax&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">set_ylim&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ymin&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ymax&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">_df&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">get_wiki_seasonal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">topic&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ymin&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ymax&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">_dict&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">p&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">article_views&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;en.wikipedia&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">topic&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">granularity&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;daily&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">start&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;20150701&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">end&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;20180701&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">_df&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">pd&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">DataFrame&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">from_dict&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">_dict&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">transpose&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">_df&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">index&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">pd&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to_datetime&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">_df&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">index&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">_df&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">_df&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">rename&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">columns&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">topic&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Daily Page Counts&amp;#34;&lt;/span>&lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">decompositionm&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">seasonal_decompose&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">_df&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">freq&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">365&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">model&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;additive&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">seasonalm&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">decompositionm&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">seasonal&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ax&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">seasonalm&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">plot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">title&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">{}&lt;/span>&lt;span class="s2"> Wiki Page Hits Seasonal Trend + Key dates + Shaded School Year&amp;#34;&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">format&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">topic&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">linewidth&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mf">3.0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">important_dates&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;2016-11-08&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;2017-01-20&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;2016-02-15&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;2017-02-20&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;2018-02-19&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;2015-12-25&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;2016-12-25&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;2017-12-25&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;2015-07-04&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;2016-07-04&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;2017-07-04&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;2018-07-04&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">xc&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">important_dates&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ax&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">axvline&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">xc&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">color&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;k&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">linestyle&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;--&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ax&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">axvspan&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pd&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Timestamp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;2015-09-01&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">pd&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Timestamp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;2016-06-01&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">facecolor&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;g&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">alpha&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mf">0.3&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ax&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">axvspan&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pd&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Timestamp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;2016-09-01&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">pd&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Timestamp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;2017-06-01&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">facecolor&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;g&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">alpha&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mf">0.3&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ax&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">axvspan&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pd&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Timestamp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;2017-09-01&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">pd&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Timestamp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;2018-06-01&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">facecolor&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;g&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">alpha&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mf">0.3&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ax&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">set_xlim&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pd&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Timestamp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;2015-07-01&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">pd&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Timestamp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;2018-03-01&amp;#39;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ax&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">set_ylim&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ymin&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ymax&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">_df&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">ax&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">get_wiki_df&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Sprint&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">400&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">ax&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">get_wiki_seasonal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Sprint&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">400&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_40_0.png"
width="936"
height="439"
srcset="https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_40_0_hu3323411141509902992.png 480w, https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_40_0_hu9484966113238745643.png 1024w"
loading="lazy"
alt="png"
class="gallery-image"
data-flex-grow="213"
data-flex-basis="511px"
>&lt;/p>
&lt;p>&lt;img src="https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_40_1.png"
width="944"
height="439"
srcset="https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_40_1_hu9473698445624832144.png 480w, https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_40_1_hu15196489123532816269.png 1024w"
loading="lazy"
alt="png"
class="gallery-image"
data-flex-grow="215"
data-flex-basis="516px"
>&lt;/p>
&lt;p>The seasonality trend is scarred by incorporating a singular spike in data (the additive model tries to balance bias and variance, but obviously both can break at the same time), but we see no pattern tied to the school year. (One flaw is that the hits on the Sprint wiki page are much lower to begin with, so it isn&amp;rsquo;t as reliable of a statement.) Let&amp;rsquo;s try another topic which we suspect should breathe with the school year, US President George Washington.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">ax&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">get_wiki_df&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;George Washington&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">80000&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">ax&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">get_wiki_seasonal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;George Washington&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">20000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">60000&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_42_0.png"
width="949"
height="439"
srcset="https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_42_0_hu728019450810087712.png 480w, https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_42_0_hu1557588504660646986.png 1024w"
loading="lazy"
alt="png"
class="gallery-image"
data-flex-grow="216"
data-flex-basis="518px"
>&lt;/p>
&lt;p>&lt;img src="https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_42_1.png"
width="957"
height="439"
srcset="https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_42_1_hu4246950993700994017.png 480w, https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_42_1_hu5842769235406924260.png 1024w"
loading="lazy"
alt="png"
class="gallery-image"
data-flex-grow="217"
data-flex-basis="523px"
>&lt;/p>
&lt;p>The trend here is less pronounced, but still evident. While we are on the topic, we present below, without commentary, a comparison on page hits between Donald Trump and Bill Clinton. I present both on the same scale to show the extraordinary difference in the magnitude of public interest in each individual.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">ax&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">get_wiki_df&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Donald Trump&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">7000000&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">ax&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">get_wiki_seasonal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Donald Trump&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">200000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">5000000&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_44_0.png"
width="961"
height="439"
srcset="https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_44_0_hu12431561242277625164.png 480w, https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_44_0_hu12987332857322901598.png 1024w"
loading="lazy"
alt="png"
class="gallery-image"
data-flex-grow="218"
data-flex-basis="525px"
>&lt;/p>
&lt;p>&lt;img src="https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_44_1.png"
width="961"
height="439"
srcset="https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_44_1_hu3905602059488561052.png 480w, https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_44_1_hu11500621787571268399.png 1024w"
loading="lazy"
alt="png"
class="gallery-image"
data-flex-grow="218"
data-flex-basis="525px"
>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">ax&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">get_wiki_df&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Bill Clinton&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">7000000&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">ax&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">get_wiki_seasonal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Bill Clinton&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">200000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">5000000&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_45_0.png"
width="961"
height="439"
srcset="https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_45_0_hu8610328897221780849.png 480w, https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_45_0_hu4908779868558608109.png 1024w"
loading="lazy"
alt="png"
class="gallery-image"
data-flex-grow="218"
data-flex-basis="525px"
>&lt;/p>
&lt;p>&lt;img src="https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_45_1.png"
width="961"
height="439"
srcset="https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_45_1_hu5080355382892603546.png 480w, https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_45_1_hu7112905406705259765.png 1024w"
loading="lazy"
alt="png"
class="gallery-image"
data-flex-grow="218"
data-flex-basis="525px"
>&lt;/p>
&lt;p>Let&amp;rsquo;s make use of Prophet now, because it has nicer graphs and seems a little more robust in my limited usage so far. We&amp;rsquo;ve used it above, but I will walk through a little more slowly this time. First we must create a Prophet object, and fit our dataframe to Prophet such that there is a datetime column labeled ds, and the counts value column is relabeled y.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">m&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Prophet&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">yearly_seasonality&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">True&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">weekly_seasonality&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">True&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">mcmc_samples&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">seasonality_prior_scale&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">50&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">proLincoln&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">dfLincoln&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">proLincoln&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;ds&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">dfLincoln&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">index&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">proLincoln&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">head&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div>
&lt;style scoped>
.dataframe tbody tr th:only-of-type {
vertical-align: middle;
}
&lt;pre>&lt;code>.dataframe tbody tr th {
vertical-align: top;
}
.dataframe thead th {
text-align: right;
}
&lt;/code>&lt;/pre>
&lt;p>&lt;/style>&lt;/p>
&lt;table border="1" class="dataframe">
&lt;thead>
&lt;tr style="text-align: right;">
&lt;th>&lt;/th>
&lt;th>Daily Page Counts&lt;/th>
&lt;th>ds&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;th>2015-07-01&lt;/th>
&lt;td>15223&lt;/td>
&lt;td>2015-07-01&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>2015-07-02&lt;/th>
&lt;td>15137&lt;/td>
&lt;td>2015-07-02&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>2015-07-03&lt;/th>
&lt;td>17291&lt;/td>
&lt;td>2015-07-03&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>2015-07-04&lt;/th>
&lt;td>19697&lt;/td>
&lt;td>2015-07-04&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>2015-07-05&lt;/th>
&lt;td>18149&lt;/td>
&lt;td>2015-07-05&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">proLincoln&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">proLincoln&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">rename&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">columns&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="s1">&amp;#39;Daily Page Counts&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;y&amp;#39;&lt;/span>&lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">proLincoln&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">head&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div>
&lt;style scoped>
.dataframe tbody tr th:only-of-type {
vertical-align: middle;
}
&lt;pre>&lt;code>.dataframe tbody tr th {
vertical-align: top;
}
.dataframe thead th {
text-align: right;
}
&lt;/code>&lt;/pre>
&lt;p>&lt;/style>&lt;/p>
&lt;table border="1" class="dataframe">
&lt;thead>
&lt;tr style="text-align: right;">
&lt;th>&lt;/th>
&lt;th>y&lt;/th>
&lt;th>ds&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;th>2015-07-01&lt;/th>
&lt;td>15223&lt;/td>
&lt;td>2015-07-01&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>2015-07-02&lt;/th>
&lt;td>15137&lt;/td>
&lt;td>2015-07-02&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>2015-07-03&lt;/th>
&lt;td>17291&lt;/td>
&lt;td>2015-07-03&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>2015-07-04&lt;/th>
&lt;td>19697&lt;/td>
&lt;td>2015-07-04&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>2015-07-05&lt;/th>
&lt;td>18149&lt;/td>
&lt;td>2015-07-05&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">m&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">fit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">proLincoln&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;pre>&lt;code>INFO:fbprophet.forecaster:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.
/home/d7082791602/.local/lib/python3.6/site-packages/pystan/misc.py:399: FutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.float64 == np.dtype(float).type`.
elif np.issubdtype(np.asarray(v).dtype, float):
&amp;lt;fbprophet.forecaster.Prophet at 0x7f7fbdf32cc0&amp;gt;
&lt;/code>&lt;/pre>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">future&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">m&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">make_future_dataframe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">periods&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">365&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">forecast&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">m&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">predict&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">future&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">forecast&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">head&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">m&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">plot_components&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">forecast&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">m&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">plot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">forecast&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_50_0.png"
width="640"
height="640"
srcset="https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_50_0_hu17782472607682003399.png 480w, https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_50_0_hu3113032810945161071.png 1024w"
loading="lazy"
alt="png"
class="gallery-image"
data-flex-grow="100"
data-flex-basis="240px"
>&lt;/p>
&lt;p>&lt;img src="https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_50_1.png"
width="712"
height="424"
srcset="https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_50_1_hu9186470907338717511.png 480w, https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_50_1_hu6933392603363863496.png 1024w"
loading="lazy"
alt="png"
class="gallery-image"
data-flex-grow="167"
data-flex-basis="403px"
>&lt;/p>
&lt;p>Here we see that prophet also very nicely picks out the 2016 trend, and clearly picks out the school year trend as well as the weekday trend. In order to make these quick peaks at the data more systematic, we create and use the following function. We then use these functions to take a look at a varied array of Wikipedia pages and conjecture a bit about the results.&lt;/p>
&lt;p>The first one we take a look at is &amp;ldquo;Christmas&amp;rdquo; which we expect, and indeed find, has a very clean seasonality. Note the weekday trend line shows a preference for some days over others, which is an artifact simply of which day the holiday fell on in the years that are used for training (since this holiday doesn&amp;rsquo;t fall on any particular weekday by design, and we only trained based on three years, those three days in occured on, or rather Christmas Eve, will see the bias. That would be Thursday/Friday 2015, Sunday/Monday 2016, and Monday/Tuesday 2017 [2016 was a leap year]).&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">prophet_wiki_df&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">topic&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">starting&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;20150701&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ending&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;20180804&amp;#39;&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">_m&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Prophet&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">yearly_seasonality&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">True&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">daily_seasonality&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">False&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">weekly_seasonality&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">True&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">mcmc_samples&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">seasonality_prior_scale&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">50&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">_dict&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">p&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">article_views&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;en.wikipedia&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">topic&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">granularity&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;daily&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">start&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">starting&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">end&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">ending&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">_df&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">pd&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">DataFrame&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">from_dict&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">_dict&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">transpose&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">_df&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">index&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">pd&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to_datetime&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">_df&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">index&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">_df&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">plot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">title&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">{}&lt;/span>&lt;span class="s2"> Wikipedia Page Hit Counts&amp;#34;&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">format&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">topic&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">_df&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">_df&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">rename&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">columns&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">topic&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">replace&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34; &amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;_&amp;#34;&lt;/span>&lt;span class="p">):&lt;/span> &lt;span class="s2">&amp;#34;y&amp;#34;&lt;/span>&lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">_df&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;ds&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">_df&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">index&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">_m&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">fit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">_df&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">_future&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">_m&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">make_future_dataframe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">periods&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">365&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">_forecast&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">_m&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">predict&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">future&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">_m&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">plot_components&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">_forecast&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">_m&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">plot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">_forecast&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">prophet_wiki_df&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Christmas&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_53_0.png"
width="955"
height="439"
srcset="https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_53_0_hu10584922616636280922.png 480w, https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_53_0_hu3736129419446245882.png 1024w"
loading="lazy"
alt="png"
class="gallery-image"
data-flex-grow="217"
data-flex-basis="522px"
>&lt;/p>
&lt;p>&lt;img src="https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_53_1.png"
width="640"
height="640"
srcset="https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_53_1_hu4256068288710772909.png 480w, https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_53_1_hu14472288856339339886.png 1024w"
loading="lazy"
alt="png"
class="gallery-image"
data-flex-grow="100"
data-flex-basis="240px"
>&lt;/p>
&lt;p>&lt;img src="https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_53_2.png"
width="712"
height="424"
srcset="https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_53_2_hu593134724396844644.png 480w, https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_53_2_hu5923363706036470394.png 1024w"
loading="lazy"
alt="png"
class="gallery-image"
data-flex-grow="167"
data-flex-basis="403px"
>&lt;/p>
&lt;p>Now let&amp;rsquo;s look at something that shouldn&amp;rsquo;t really have too much seasonality, the term eclipse. Eclipses happen on a regular basis, of course, and physics predicts them extremely accurately, but human observation of eclipses happens irregularly. Here we can see that the major eclipse event of 2017 is so strongly represented in the data that it ends of defining the very inacurate model that results.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">prophet_wiki_df&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Eclipse&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_55_0.png"
width="949"
height="439"
srcset="https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_55_0_hu1832817350638639316.png 480w, https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_55_0_hu68147201456411011.png 1024w"
loading="lazy"
alt="png"
class="gallery-image"
data-flex-grow="216"
data-flex-basis="518px"
>&lt;/p>
&lt;p>&lt;img src="https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_55_1.png"
width="640"
height="640"
srcset="https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_55_1_hu15436037156562971454.png 480w, https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_55_1_hu11373527152088042617.png 1024w"
loading="lazy"
alt="png"
class="gallery-image"
data-flex-grow="100"
data-flex-basis="240px"
>&lt;/p>
&lt;p>&lt;img src="https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_55_2.png"
width="712"
height="424"
srcset="https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_55_2_hu18216527407420921101.png 480w, https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_55_2_hu4936515771465198571.png 1024w"
loading="lazy"
alt="png"
class="gallery-image"
data-flex-grow="167"
data-flex-basis="403px"
>&lt;/p>
&lt;p>We can see the fading of pop culture stars, such as the declining trend with Beyonce. Again, we see that the none of the output here is very trustworthy except perhaps the overall trend. Events such as awards ceremonies, album releases, and gossip events result in spikes which then dominate the seasonality models.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">prophet_wiki_df&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Beyoncé&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_61_0.png"
width="955"
height="439"
srcset="https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_61_0_hu779867643647340743.png 480w, https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_61_0_hu6610046134201326222.png 1024w"
loading="lazy"
alt="png"
class="gallery-image"
data-flex-grow="217"
data-flex-basis="522px"
>&lt;/p>
&lt;p>&lt;img src="https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_61_1.png"
width="640"
height="640"
srcset="https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_61_1_hu6941949038559864271.png 480w, https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_61_1_hu6562164456866045799.png 1024w"
loading="lazy"
alt="png"
class="gallery-image"
data-flex-grow="100"
data-flex-basis="240px"
>&lt;/p>
&lt;p>&lt;img src="https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_61_2.png"
width="712"
height="424"
srcset="https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_61_2_hu12797667187750071975.png 480w, https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_61_2_hu17622665628030378456.png 1024w"
loading="lazy"
alt="png"
class="gallery-image"
data-flex-grow="167"
data-flex-basis="403px"
>&lt;/p>
&lt;p>Returning to our theme above that some wiki topics breathe with the school year, electron is surely one of those topics.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">prophet_wiki_df&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Electron&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_63_0.png"
width="942"
height="439"
srcset="https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_63_0_hu13630530743938612783.png 480w, https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_63_0_hu4503251938612224192.png 1024w"
loading="lazy"
alt="png"
class="gallery-image"
data-flex-grow="214"
data-flex-basis="514px"
>&lt;/p>
&lt;p>&lt;img src="https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_63_1.png"
width="640"
height="640"
srcset="https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_63_1_hu1687205569069861011.png 480w, https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_63_1_hu11000975149658991887.png 1024w"
loading="lazy"
alt="png"
class="gallery-image"
data-flex-grow="100"
data-flex-basis="240px"
>&lt;/p>
&lt;p>&lt;img src="https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_63_2.png"
width="712"
height="424"
srcset="https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_63_2_hu8250378559885942533.png 480w, https://tdj28.github.io/p/exploring-wikipedia-page-count-trends/assets/assets20180805/output_63_2_hu17038285373130760489.png 1024w"
loading="lazy"
alt="png"
class="gallery-image"
data-flex-grow="167"
data-flex-basis="403px"
>&lt;/p>
&lt;h2 id="conclusions">Conclusions
&lt;/h2>&lt;p>Statistical tools for seasonal decomposition are a great start in trying to predict time series which have some predictability built in. For topics that have a much greater stochastic characteristic, these tools become much more difficult to use properly. Blog entries here will continue to explore these tools and go into greater detail about the math behind them and how to use the tools in more sophisticated ways. Initial impressions from this exploration here:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>There are some time series which are nearly perfectly predictable, such as that for the page hits on the topic of Christmas, which is an event that happens once per year and is limited in scope to a small minority of weeks in the entire year.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Other trends are fairly predictable, such as electron, because of its association with school work and the predictable seasonality of school. Interestingly, the trends one finds with topics like this show the &amp;ldquo;hit&amp;rdquo; that the holiday break seems to have on education, where the end of year break is preceeded with a sort of winding down and then followed by a winding up, both of which are not particularly rapid.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Trends that have an educational component, such as popular US Presidents like Abraham Lincoln, are complicated by holidays such as president&amp;rsquo;s day, elections, and inaugurations.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Trends from pop culture, such as Beyonce, can possibly trace the popularity of a celebrity but, are complicated by things such as album releases, awards ceremonies, gossip outbreaks, etc.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Sometimes, a massive surge in interest in a topic due to some even can entirely throw off seasonal decomposition, and such events will have to be &amp;lsquo;windowed out&amp;rsquo; and interpolated to get an accurate picture of the routine behavior of the time series.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Some topics show the decline in interest in the topic in general, or in some cases, an increasing normalization of a topic such that it gets less page views over time.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Some topics are so random that speaking about trends and seasonality is nonsense. However, these models can easily overfit that data and give you a false sense of confidence that will inevitably be proven wrong.&lt;/p>
&lt;/li>
&lt;/ul></description></item></channel></rss>